#pragma checksum "E:\360EventRepo\WebAssemblyDemo\netcore-webassembly\BlazorDemo\BlazorDemo\Pages\ForecastChart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "58313009da842fff9f7fb6ce2233a7052003267a"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorDemo.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using BlazorDemo;
    using BlazorDemo.Shared;
    using AspNetMonsters.Blazor.Geolocation;
    using BlazorDemo.Services;
    using ChartJs.Blazor.ChartJS.BarChart;
    using ChartJs.Blazor.ChartJS.BarChart.Dataset;
    using ChartJs.Blazor.ChartJS.Common.Legends;
    using ChartJs.Blazor.Charts;
    using ChartJs.Blazor.Util.Color;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/charts")]
    public class ForecastChart : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 32 "E:\360EventRepo\WebAssemblyDemo\netcore-webassembly\BlazorDemo\BlazorDemo\Pages\ForecastChart.cshtml"
            

    string value = default;

    private WeatherForecast[] forecasts { get; set; }

    BarChartConfig barChartConfig;
    ChartJsBarChart barChart;

    Location location;

    protected override async Task OnInitAsync()
    {
        location = await LocationService.GetLocationAsync();
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");

    }

    protected override void OnInit()
    {
        barChartConfig = barChartConfig ?? new BarChartConfig
        {
            CanvasId = "myBarChartCanvas",

            Options = new BarChartOptions
            {

                Text = "Sample chart from Blazor",
                Display = true,
                Responsive = true,
                Legend = new Legend
                {
                    Position = LegendPosition.BOTTOM.ToString(),
                    Labels = new Labels
                    {
                        UsePointStyle = true
                    }
                },
                Scales = new BarChartOptionsScales
                {
                    xAxes = new List<BarChartAxis>
                    {
                        new BarChartAxis
                        {
                            Stacked = true
                        }
                    }.ToArray(),
                    yAxes = new List<BarChartAxis>
                    {
                        new BarChartAxis
                        {
                            Stacked = true
                        }
                    }.ToArray()
                }
            },


        };
    }

    protected override void OnAfterRender()
    {
        Console.WriteLine("OnAfterRender - bar");
        barChart.Reload();

    }


    void displayData()
    {
        barChartConfig.Data = new BarChartData
        {
            Labels = forecasts.Select(x => x.Date.ToShortDateString()).ToList(),
            Datasets = new List<BaseBarChartDataset>
            {
                new BarChartDataset
                {
                    Label = "Date vs Celcius",
                    BackgroundColor = ColorUtil.RandomColorString(),
                    BorderColor = ColorUtil.RandomColorString(),
                    Data = forecasts.Select(x => (object)x.TemperatureC.ToString()).ToList(),
                },

            }
        };

        barChart.Reload();
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private LocationService LocationService { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
